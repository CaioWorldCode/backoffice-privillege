{"version":3,"sources":["views/home/chartLogs.js","views/home/index.js","components/html-head/HtmlHead.js","components/breadcrumb-list/BreadcrumbList.js","services/api.js"],"names":["ChartLogs","props","themeValues","useSelector","state","settings","chartContainer","useRef","tooltipRef","ExternalTooltip","React","useCallback","chart","tooltip","color","text","value","icon","positionY","canvas","offsetTop","positionX","offsetLeft","opacity","current","left","dataPoints","element","x","top","caretY","body","dataIndex","datasetIndex","labelColors","borderColor","data","labels","toLocaleUpperCase","datasets","classList","remove","yAlign","add","style","ReactDOM","render","borderWidth","borderStyle","className","CsLineIcons","stroke","LegendLabels","useMemo","font","size","family","padding","usePointStyle","boxWidth","label","backgroundColor","values","config","type","options","elements","bar","borderRadius","parseInt","borderRadiusMd","borderSkipped","plugins","crosshair","datalabels","legend","position","enabled","external","streaming","interaction","intersect","mode","responsive","maintainAspectRatio","scales","y","grid","display","lineWidth","separatorLight","drawBorder","ticks","beginAtZero","stepSize","fontColor","alternate","useEffect","myChart","Chart","register","registerables","destroy","ref","memo","DashboardsAnalytic","title","useState","setData","loading","setLoading","logValues","setLogValues","logLabels","setLogLabels","loadDashboard","a","api","get","response","array_values","array_labels","Object","keys","forEach","key","index","val","lab","push","HtmlHead","description","Row","Col","md","BreadcrumbList","items","to","sm","Card","Body","xs","xl","users","contracts","signatures","last_users","map","row","name","email","role","status","children","content","basePath","DEFAULT_PATHS","APP","breadcrumb","bIndex","Item","linkAs","Link","linkProps","axios","create","baseURL","API_URL","JSON","parse","localStorage","getItem","auth","interceptors","request","use","currentUser","token","headers","Authorization","error","window","location","href","APP_URL"],"mappings":"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","file":"static/js/31.aa006107.chunk.js","sourcesContent":["/* eslint-disable no-underscore-dangle,no-unused-vars */\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\nimport { useSelector } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\n\nconst ChartLogs = (props) => {\n\tconst { themeValues } = useSelector((state) => state.settings);\n\tconst chartContainer = useRef(null);\n\tconst tooltipRef = useRef(null);\n\n\tconst ExternalTooltip = React.useCallback(({ chart, tooltip }) => {\n\t\tlet color = '';\n\t\tlet text = '';\n\t\tlet value = '';\n\t\tlet icon = '';\n\t\tconst positionY = chart.canvas.offsetTop;\n\t\tconst positionX = chart.canvas.offsetLeft;\n\t\tconst { opacity } = tooltip;\n\n\t\tif (tooltipRef.current.opacity === 0) {\n\t\t\ttooltipRef.current.style.opacity = 0;\n\t\t\treturn;\n\t\t}\n\n\t\tconst left = `${positionX + tooltip.dataPoints[0].element.x - 75}px`;\n\t\tconst top = `${positionY + tooltip.caretY}px`;\n\n\t\tif (tooltip.body) {\n\t\t\tconst { dataIndex, datasetIndex } = tooltip.dataPoints[0];\n\t\t\tcolor = tooltip.labelColors[0].borderColor;\n\t\t\ttext = chart.data.labels[dataIndex].toLocaleUpperCase();\n\t\t\tvalue = chart.data.datasets[datasetIndex].data[dataIndex];\n\t\t\ticon = chart.data.datasets[datasetIndex].icon;\n\t\t}\n\n\t\ttooltipRef.current.classList.remove('above', 'below', 'no-transform');\n\t\tif (tooltip.yAlign) {\n\t\t\ttooltipRef.current.classList.add(tooltip.yAlign);\n\t\t} else {\n\t\t\ttooltipRef.current.classList.add('no-transform');\n\t\t}\n\n\t\ttooltipRef.current.style.opacity = opacity;\n\t\ttooltipRef.current.style.left = left;\n\t\ttooltipRef.current.style.top = top;\n\n\t\tReactDOM.render(\n\t\t\t<>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{ borderColor: color, borderWidth: 1, borderStyle: 'solid' }}\n\t\t\t\t\tclassName=\"icon-container  d-flex align-middle align-items-center justify-content-center align-self-center rounded-xl sh-5 sw-5 rounded-xl me-3\"\n\t\t\t\t>\n\t\t\t\t\t<CsLineIcons icon={icon} stroke={color} />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span className=\"text d-flex align-middle text-alternate align-items-center text-small\">{text}</span>\n\t\t\t\t\t<span className=\"value d-flex align-middle text-body align-items-center cta-4\">{value}</span>\n\t\t\t\t</div>\n\t\t\t</>,\n\t\t\ttooltipRef.current\n\t\t);\n\t}, []);\n\n\tconst LegendLabels = React.useMemo(() => {\n\t\treturn {\n\t\t\tfont: {\n\t\t\t\tsize: 14,\n\t\t\t\tfamily: themeValues.font,\n\t\t\t},\n\t\t\tpadding: 20,\n\t\t\tusePointStyle: true,\n\t\t\tboxWidth: 10,\n\t\t};\n\t}, [themeValues]);\n\n\tconst data = React.useMemo(() => {\n\t\treturn {\n\t\t\tlabels: props.label,\n\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Acessos',\n\t\t\t\t\ticon: 'send',\n\t\t\t\t\tborderColor: `rgba(77, 122,255)`,\n\t\t\t\t\tbackgroundColor: `rgba(77, 122,255,0.1)`,\n\t\t\t\t\tdata:props.values,\n\t\t\t\t},\n\t\t\t\t// {\n\t\t\t\t// \tlabel: 'Pendentes',\n\t\t\t\t// \ticon: 'send',\n\t\t\t\t// \tborderColor: themeValues.secondary,\n\t\t\t\t// \tbackgroundColor: `rgba(${themeValues.secondaryrgb},0.1)`,\n\t\t\t\t// \tdata: [0,0,0,0,0,0],\n\t\t\t\t// },\n\n\t\t\t\t// {\n\t\t\t\t// \tlabel: 'Atrasadas',\n\t\t\t\t// \ticon: 'send',\n\t\t\t\t// \tborderColor: `rgba(255, 77,77)`,\n\t\t\t\t// \tbackgroundColor: `rgba(255, 77,77,0.1)`,\n\t\t\t\t// \tdata: [0,0,0,0,0,0],\n\t\t\t\t// },\n\t\t\t],\n\t\t};\n\t}, [themeValues]);\n\tconst config = React.useMemo(() => {\n\t\treturn {\n\t\t\ttype: 'bar',\n\t\t\toptions: {\n\t\t\t\telements: {\n\t\t\t\t\tbar: {\n\t\t\t\t\t\tborderWidth: 1.5,\n\t\t\t\t\t\tborderRadius: parseInt(themeValues.borderRadiusMd, 10),\n\t\t\t\t\t\tborderSkipped: false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tplugins: {\n\t\t\t\t\tcrosshair: false,\n\t\t\t\t\tdatalabels: false,\n\t\t\t\t\tlegend: {\n\t\t\t\t\t\tposition: 'bottom',\n\t\t\t\t\t\tlabels: LegendLabels,\n\t\t\t\t\t},\n\t\t\t\t\ttooltip: {\n\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t\texternal: ExternalTooltip,\n\t\t\t\t\t},\n\t\t\t\t\tstreaming: false,\n\t\t\t\t},\n\t\t\t\tinteraction: {\n\t\t\t\t\tintersect: true,\n\t\t\t\t\tmode: 'point',\n\t\t\t\t},\n\t\t\t\tresponsive: true,\n\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\tscales: {\n\t\t\t\t\ty: {\n\t\t\t\t\t\t// min: 0,\n\t\t\t\t\t\t// max: 10,\n\t\t\t\t\t\tgrid: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\tlineWidth: 1,\n\t\t\t\t\t\t\tcolor: themeValues.separatorLight,\n\t\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\t\tstepSize: 10,\n\t\t\t\t\t\t\tpadding: 8,\n\t\t\t\t\t\t\tfontColor: themeValues.alternate,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tx: {\n\t\t\t\t\t\tgrid: { display: false, drawBorder: false },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdata,\n\t\t};\n\t}, [data, LegendLabels, ExternalTooltip, themeValues]);\n\n\tuseEffect(() => {\n\t\tlet myChart = null;\n\t\tif (chartContainer && chartContainer.current) {\n\t\t\tChart.register(...registerables);\n\t\t\tmyChart = new Chart(chartContainer.current, config);\n\t\t}\n\t\treturn () => {\n\t\t\tif (myChart) {\n\t\t\t\tmyChart.destroy();\n\t\t\t}\n\t\t};\n\t}, [config]);\n\n\treturn (\n\t\t<>\n\t\t\t<canvas ref={chartContainer} />\n\t\t\t<div\n\t\t\t\tref={tooltipRef}\n\t\t\t\tclassName=\"custom-tooltip position-absolute bg-foreground rounded-md border border-separator pe-none p-3 d-flex z-index-1 align-items-center opacity-0 basic-transform-transition\"\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default React.memo(ChartLogs);\n","import React, { useEffect, useState } from 'react';\nimport { Button, Row, Col, Card, Dropdown, Badge } from 'react-bootstrap';\nimport HtmlHead from 'components/html-head/HtmlHead';\nimport BreadcrumbList from 'components/breadcrumb-list/BreadcrumbList';\nimport api from 'services/api';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport ChartLogs from './chartLogs';\n\n\nconst DashboardsAnalytic = () => {\n    const title = 'Analytic Dashboard';\n    const description = 'Analytic Dashboard';\n\n    const breadcrumbs = [\n        { to: '', text: 'Home' },\n        { to: 'dashboards', text: 'Dashboards' },\n    ]\n\n    const [data, setData] = useState(false)\n    const [loading, setLoading] = useState(true)\n    const [logValues, setLogValues] = useState(false)\n    const [logLabels, setLogLabels] = useState(false)\n\n    useEffect(() => {\n\n        loadDashboard()\n\n    }, [])\n\n    const loadDashboard = async () => {\n        try {\n            const response = await api.get(`/api/v1/private/dashboard/home`)\n            setData(response.data.data)\n        } catch (error) {\n\n        }\n\n        try {\n            const response = await api.get(`/api/v1/private/dashboard/logs`)\n            setLoading(false)\n            let data = response.data\n            let array_values = []\n            let array_labels = []\n\n            Object.keys(data).forEach(function (key, index) {\n                let val = data[key]\n                let lab = key\n                array_values.push(val)\n                array_labels.push(lab)\n            })\n\n            setLogLabels(array_labels)\n            setLogValues(array_values)\n        } catch (error) {\n\n        }\n    }\n\n\n    return (\n        <>\n            <HtmlHead title={title} description={description} />\n            {/* Title and Top Buttons Start */}\n            <div className=\"page-title-container\">\n                <Row>\n                    {/* Title Start */}\n                    <Col md=\"7\">\n                        <h1 className=\"mb-0 pb-0 display-4\">{title}</h1>\n                        <BreadcrumbList items={breadcrumbs} />\n                    </Col>\n                    {/* Title End */}\n                </Row>\n            </div>\n            {/* Title and Top Buttons End */}\n\n            <Row className=\"g-2\">\n                <Col sm=\"3\">\n                    <Card className=\"sh-11 hover-scale-up cursor-pointer\">\n                        <Card.Body className=\"h-100 py-3 align-items-center\">\n                            <Row className=\"g-0 h-100 align-items-center\">\n                                <Col xs=\"auto\" className=\"pe-3\">\n                                    <div className=\"bg-gradient-light sh-5 sw-5 rounded-xl d-flex justify-content-center align-items-center\">\n                                        <CsLineIcons icon=\"user\" className=\"text-white\" />\n                                    </div>\n                                </Col>\n                                <Col>\n                                    <Row className=\"gx-2 d-flex justify-content-center align-items-center\">\n                                        <Col xs=\"12\" className=\"col-12 d-flex justify-content-center align-items-center\">\n                                            <div className=\"d-flex align-items-center lh-1-25\">Usuários</div>\n                                        </Col>\n\n                                        <Col xl=\"auto\" className=\"col-12 d-flex justify-content-center align-items-center\">\n                                            <div className=\"cta-2 text-primary\">{data.users}</div>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm=\"3\">\n                    <Card className=\"sh-11 hover-scale-up cursor-pointer\">\n                        <Card.Body className=\"h-100 py-3 align-items-center\">\n                            <Row className=\"g-0 h-100 align-items-center\">\n                                <Col xs=\"auto\" className=\"pe-3\">\n                                    <div className=\"bg-success sh-5 sw-5 rounded-xl d-flex justify-content-center align-items-center\">\n                                        <CsLineIcons icon=\"book\" className=\"text-white\" />\n                                    </div>\n                                </Col>\n                                <Col>\n                                    <Row className=\"gx-2 d-flex justify-content-center align-items-center\">\n                                        <Col xs=\"12\" className=\"col-12 d-flex justify-content-center align-items-center\">\n                                            <div className=\"d-flex align-items-center lh-1-25\">Contratos</div>\n                                        </Col>\n\n                                        <Col xl=\"auto\" className=\"col-12 d-flex justify-content-center align-items-center\">\n                                            <div className=\"cta-2 text-primary\">{data.contracts}</div>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col sm=\"3\">\n                    <Card className=\"sh-11 hover-scale-up cursor-pointer\">\n                        <Card.Body className=\"h-100 py-3 align-items-center\">\n                            <Row className=\"g-0 h-100 align-items-center\">\n                                <Col xs=\"auto\" className=\"pe-3\">\n                                    <div className=\"bg-warning sh-5 sw-5 rounded-xl d-flex justify-content-center align-items-center\">\n                                        <CsLineIcons icon=\"pen\" className=\"text-white\" />\n                                    </div>\n                                </Col>\n                                <Col>\n                                    <Row className=\"gx-2 d-flex justify-content-center align-items-center\">\n                                        <Col xs=\"12\" className=\"col-12 d-flex justify-content-center align-items-center\">\n                                            <div className=\"d-flex align-items-center lh-1-25\">Assinaturas</div>\n                                        </Col>\n\n                                        <Col xl=\"auto\" className=\"col-12 d-flex justify-content-center align-items-center\">\n                                            <div className=\"cta-2 text-primary\">{data.signatures}</div>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row className=\"g-2 mt-4\">\n                <Col sm=\"6\">\n                    <Card className=\"mb-2 sh-10 sh-md-8\">\n                        <Card.Body className=\"pt-0 pb-0 h-100\">\n                            <Row className=\"w-100 h-100\">\n                                <Col xs=\"2\" className='h-100'>\n                                    <div className='d-flex align-items-center h-100'>\n                                        Nome\n                                    </div>\n                                </Col>\n                                <Col xs=\"5\" className='h-100'>\n                                    <div className='d-flex align-items-center  h-100'>\n                                        E-mail\n                                    </div>\n                                </Col>\n\n                                <Col xs=\"2\" className='h-100'>\n                                    <div className='d-flex align-items-center h-100'>\n                                        Nível\n                                    </div>\n                                </Col>\n\n                                <Col xs=\"3\" className='h-100'>\n                                    <div className='d-flex align-items-center h-100'>\n                                        Status\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n\n                    {data.last_users && data.last_users.map((row, index) => {\n                        return (\n                            <Card className=\"mb-2 sh-10 sh-md-8\" key={index}>\n                                <Card.Body className=\"pt-0 pb-0 h-100\">\n                                    <Row className=\"w-100 h-100\">\n                                        <Col xs=\"2\" className='h-100'>\n                                            <div className='d-flex align-items-center h-100'>\n                                                {row.name}\n                                            </div>\n                                        </Col>\n                                        <Col xs=\"5\" className='h-100'>\n                                            <div className='d-flex align-items-center  h-100'>\n                                                {row.email}\n                                            </div>\n                                        </Col>\n\n                                        <Col xs=\"2\" className='h-100'>\n                                            <div className='d-flex align-items-center h-100'>\n                                                {row.role}\n                                            </div>\n                                        </Col>\n\n                                        <Col xs=\"3\" className='h-100'>\n                                            <div className='d-flex align-items-center h-100'>\n                                                {row.status}\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                </Card.Body>\n                            </Card>\n                        )\n                    })}\n                </Col>\n\n                <Col sm=\"6\">\n                    {!loading\n                        ? <ChartLogs label={logLabels} values={logValues} />\n                        : <></>\n                    }\n\n                </Col>\n            </Row>\n\n        </>\n    );\n};\n\nexport default DashboardsAnalytic;\n","import { Helmet } from 'react-helmet';\nimport React from 'react';\n\nconst HtmlHead = ({ title = '', description = '', children = null }) => {\n  return (\n    <Helmet>\n      {title && <title>{title}</title>}\n      {description && <meta name=\"description\" content={description} />}\n      {children && children}\n    </Helmet>\n  );\n};\nexport default HtmlHead;\n","import React from 'react';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { DEFAULT_PATHS } from 'config.js';\n\nconst BreadcrumbList = ({ items = [{ to: '/', text: 'Home' }], basePath = DEFAULT_PATHS.APP }) => {\n  return (\n    <Breadcrumb className=\"breadcrumb-container d-inline-block\">\n      {items.map((breadcrumb, bIndex) => (\n        <Breadcrumb.Item key={`breadCrumb.${bIndex}`} linkAs={Link} linkProps={{ to: `${basePath}${breadcrumb.to}` }}>\n          {breadcrumb.title || breadcrumb.text}\n        </Breadcrumb.Item>\n      ))}\n    </Breadcrumb>\n  );\n};\nexport default BreadcrumbList;\n","import axios from \"axios\";\nimport { APP_URL } from \"config\";\nimport { API_URL } from \"config\";\n\nconst api = axios.create({\n    baseURL: API_URL\n})\n\n\nlet data = JSON.parse(localStorage.getItem('persist:admin-privilege'))\ndata = JSON.parse(data.auth)\n\n\napi.interceptors.request.use(async config => {\n\n    if (data.currentUser.token) {\n        config.headers.Authorization = `Bearer ${data.currentUser.token}`\n    }\n\n    return config\n})\n\napi.interceptors.response.use(\n    response => response,\n    error => {\n        if (error.response.data.error === 'Unauthenticated.') {\n            window.location.href= `${APP_URL}/login`\n        }\n    })\n\nexport default api"],"sourceRoot":""}