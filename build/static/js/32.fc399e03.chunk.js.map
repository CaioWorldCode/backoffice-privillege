{"version":3,"sources":["hooks/useMutationObservable.js","hooks/useModalPaddingFix.js","hooks/useLayout.js","layout/footer/Footer.js","assets/images/unknow.webp","layout/nav/NavUserMenu.js","layout/nav/notifications/Notifications.js","layout/nav/search/SearchInput.js","layout/nav/search/SearchModal.js","layout/nav/NavIconMenu.js","layout/nav/main-menu/MainMenuItems.js","layout/nav/main-menu/MainMenu.js","hooks/useWindowScroll.js","hooks/useWindowSize.js","layout/nav/main-menu/helper.js","layout/nav/NavLogo.js","components/scrollspy/ScrollspyContent.js","components/scrollspy/ScrollspyMobile.js","layout/nav/NavMobileButtons.js","layout/nav/Nav.js","layout/nav/sidebar-menu/SidebarMenuItems.js","layout/nav/sidebar-menu/SidebarMenu.js","layout/Layout.js","App.js"],"names":["DEFAULT_OPTIONS","config","attributes","childList","subtree","useModalPaddingFix","dispatch","useDispatch","onListMutation","useCallback","mutationList","Array","isArray","map","mutation","type","attributeName","menuChangeMenuPadding","target","style","paddingRight","indexOf","parseInt","replace","targetEl","cb","options","useState","observer","setObserver","useEffect","obs","MutationObserver","observe","disconnect","useMutationObservable","document","body","useLayout","useSelector","state","settings","color","layout","radius","navColor","menu","attrMenuAnimate","attrMobile","placementStatus","placementHtmlData","dimensionHtmlData","behaviourHtmlData","behaviourStatus","htmlTag","documentElement","setTimeout","setThemeValues","setAttribute","removeAttribute","Footer","className","Container","Row","Col","xs","sm","Breadcrumb","Item","href","linkProps","React","memo","appRoot","DEFAULT_PATHS","APP","endsWith","slice","length","NavUserMenuContent","CsLineIcons","icon","size","to","NavUserMenuDropdownToggle","forwardRef","ref","onClick","expanded","user","e","preventDefault","stopPropagation","alt","data","name","src","avatar","UnknowProfile","NavUserMenuDropdownMenu","classNames","displayName","MENU_NAME","NavUserMenu","placement","view","auth","isLogin","currentUser","showingNavMenu","layoutShowingNavMenu","Dropdown","as","bsPrefix","onToggle","status","event","originalEvent","show","drop","Toggle","Menu","popperConfig","modifiers","offset","MENU_PLACEMENT","Horizontal","window","innerWidth","NotificationItem","img","link","detail","activeClassName","NotificationsDropdownMenu","labeledBy","items","scrollbars","autoHide","autoHideDelay","overflowBehavior","x","y","item","itemIndex","SearchInput","setShow","history","useHistory","searchInput","useRef","setData","query","setQuery","selectedIndex","setSelectedIndex","resultCount","selectedItem","mySelectedIndexRef","setMySelectedIndex","currenData","current","routes","useMemo","getSearchItems","routesAndMenuItems","userRole","role","f","useIntl","formatMessage","onResultClick","path","push","onKeyDown","includes","keyCode","rCount","sIndex","sCurrent","USE_MULTI_LANGUAGE","formatedRoutes","d","label","id","addEventListener","removeEventListener","focus","autoComplete","onChange","value","placeholder","autoFocus","shouldSort","includeMatches","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","formattedResults","results","Math","min","formattedResult","resultIndex","autoComplete_selected","formatted","t","tIndex","isHighlighted","text","SearchModal","Modal","onHide","Header","Body","NavIconMenu","pinButtonEnable","behaviour","showSearchModal","setShowSearchModal","menuChangeBehaviour","MENU_BEHAVIOUR","Pinned","Unpinned","disabled","settingsChangeColor","HorizontalMenuDropdownToggle","children","active","MainMenuItem","isSubItem","menuPlacement","DEFAULT_SETTINGS","dropdownMenuRef","collapseAll","pathname","useLocation","isActive","startsWith","verticalMenuCollapseExpanded","setVerticalMenuCollapseExpanded","horizontalDropdownIsOpen","setHorizontalDropdownIsOpen","getLabel","onToggleItem","isOpen","subs","megaParent","mega","renderOnMount","align","strategy","gpuAcceleration","adaptive","roundOffsets","round","clientWidth","console","warn","MainMenuItems","menuItems","Vertical","menuChangeCollapseAll","Collapse","in","isExternal","rel","index","MainMenu","breakpoints","useSidebar","scrolled","setScrolled","windowScrolled","prevScrollPos","pageYOffset","handleLoad","handleScroll","onWindowScrollInterval","currentScrollPos","abs","intervalId","setInterval","clearInterval","useWindowScroll","width","undefined","height","windowSize","setWindowSize","resizeTimer","handleResize","clearTimeout","innerHeight","useWindowSize","menuItemsMemo","getMenuItems","mainMenuItems","menuChangeAttrMenuAnimate","menuChangeNavClasses","menuChangeAttrMobile","menuChangePinButtonEnable","click","getMenuStatus","pBreakpoints","pPlacement","pBehaviour","placementStatusCB","windowWidth","horizontalMobile","DIMENSION","Mobile","Desktop","verticalMobile","checkPlacement","behaviourStatusCB","verticalUnpinned","checkBehaviour","b","a","menuChangePlacementStatus","isDeeplyDiffBehaviourStatus","menuChangeBehaviourStatus","NavLogo","ScrollspyContent","sub","subIndex","ScrollspyToggle","ScrollspyMobile","NavMobileButtons","navClasses","scrollspyItems","scrollspy","hideMobileMenu","newNavClasses","Nav","menuPadding","mouseActionTimer","onMouseEnter","onMouseLeave","SidebarMenuItems","SidebarMenuItem","SidebarMenu","sidebarItems","Layout","scrollTo","App","getRoutes","RouteIdentifier","fallback","Loading"],"mappings":"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","file":"static/js/32.fc399e03.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst DEFAULT_OPTIONS = {\n  config: { attributes: true, childList: false, subtree: false },\n};\nexport const useMutationObservable = (targetEl, cb, options = DEFAULT_OPTIONS) => {\n  const [observer, setObserver] = useState(null);\n\n  useEffect(() => {\n    const obs = new MutationObserver(cb);\n    setObserver(obs);\n  }, [cb, options, setObserver]);\n\n  useEffect(() => {\n    if (!observer) return;\n    const { config } = options;\n    observer.observe(targetEl, config);\n    // eslint-disable-next-line consistent-return\n    return () => {\n      if (observer) {\n        observer.disconnect();\n      }\n    };\n  }, [observer, targetEl, options]);\n};\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { menuChangeMenuPadding } from 'layout/nav/main-menu/menuSlice';\nimport { useMutationObservable } from './useMutationObservable';\n\nconst useModalPaddingFix = () => {\n  const dispatch = useDispatch();\n\n  const onListMutation = useCallback(\n    (mutationList) => {\n      if (Array.isArray(mutationList)) {\n        // eslint-disable-next-line array-callback-return\n        mutationList.map((mutation) => {\n          if (mutation.type === 'attributes' && mutation.attributeName === 'style') {\n            dispatch(\n              menuChangeMenuPadding(\n                mutation.target.style.paddingRight.indexOf('px') > -1 ? parseInt(mutation.target.style.paddingRight.replace('px', ''), 10) : ''\n              )\n            );\n          }\n        });\n      }\n    },\n    [dispatch]\n  );\n  useMutationObservable(document.body, onListMutation);\n\n  return true;\n};\nexport default useModalPaddingFix;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setThemeValues } from 'settings/settingsSlice';\nimport useModalPaddingFix from './useModalPaddingFix';\n\nconst useLayout = () => {\n  const { color, layout, radius, navColor } = useSelector((state) => state.settings);\n  const dispatch = useDispatch();\n\n  const {\n    attrMenuAnimate,\n    attrMobile,\n    placementStatus: { placementHtmlData, dimensionHtmlData },\n    behaviourStatus: { behaviourHtmlData },\n  } = useSelector((state) => state.menu);\n  useModalPaddingFix();\n\n  const htmlTag = document.documentElement;\n  useEffect(() => {\n    setTimeout(() => {\n      // setThemeValues for charts colors\n      dispatch(setThemeValues());\n      htmlTag.setAttribute('data-show', 'true');\n    }, 30);\n    htmlTag.setAttribute('data-color', color);\n    htmlTag.setAttribute('data-layout', layout);\n    htmlTag.setAttribute('data-radius', radius);\n    htmlTag.setAttribute('data-navcolor', navColor);\n    htmlTag.setAttribute('data-placement', placementHtmlData);\n    htmlTag.setAttribute('data-dimension', dimensionHtmlData);\n    htmlTag.setAttribute('data-behaviour', behaviourHtmlData);\n    return () => {\n      htmlTag.removeAttribute('data-color');\n      htmlTag.removeAttribute('data-layout');\n      htmlTag.removeAttribute('data-radius');\n      htmlTag.removeAttribute('data-navcolor');\n      htmlTag.removeAttribute('data-show');\n      htmlTag.removeAttribute('data-placement');\n      htmlTag.removeAttribute('data-behaviour');\n      htmlTag.removeAttribute('data-dimension');\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    htmlTag.setAttribute('data-placement', placementHtmlData);\n    htmlTag.setAttribute('data-dimension', dimensionHtmlData);\n    htmlTag.setAttribute('data-behaviour', behaviourHtmlData);\n    htmlTag.setAttribute('data-navcolor', navColor);\n    htmlTag.setAttribute('data-radius', radius);\n    htmlTag.setAttribute('data-color', color);\n    htmlTag.setAttribute('data-layout', layout);\n  }, [htmlTag, placementHtmlData, dimensionHtmlData, behaviourHtmlData, navColor, radius, color, layout]);\n\n  useEffect(() => {\n    if (attrMenuAnimate) htmlTag.setAttribute('data-menu-animate', attrMenuAnimate);\n    else htmlTag.removeAttribute('data-menu-animate');\n  }, [htmlTag, attrMenuAnimate]);\n\n  useEffect(() => {\n    if (attrMobile) htmlTag.setAttribute('data-mobile', attrMobile);\n    else htmlTag.removeAttribute('data-mobile');\n  }, [htmlTag, attrMobile]);\n\n  return true;\n};\nexport default useLayout;\n","import React, { useEffect } from 'react';\nimport { Container, Row, Col, Breadcrumb } from 'react-bootstrap';\n\nconst Footer = () => {\n\tuseEffect(() => {\n\t\tdocument.documentElement.setAttribute('data-footer', 'true');\n\t\treturn () => {\n\t\t\tdocument.documentElement.removeAttribute('data-footer');\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<footer>\n\t\t\t<div className=\"footer-content\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs=\"12\" sm=\"6\">\n\t\t\t\t\t\t\t<p className=\"mb-0 text-muted text-medium\"> Conta Privilege</p>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col sm=\"6\" className=\"d-none d-sm-block\">\n\t\t\t\t\t\t\t<Breadcrumb className=\"pt-0 pe-0 mb-0 float-end\">\n\t\t\t\t\t\t\t\t<Breadcrumb.Item className=\"mb-0 text-medium\" href=\"#/\" linkProps={{ className: 'btn-link' }}>\n\t\t\t\t\t\t\t\t\tPolíticas de uso\n\t\t\t\t\t\t\t\t</Breadcrumb.Item>\n\t\t\t\t\t\t\t\t<Breadcrumb.Item className=\"mb-0 text-medium\" href=\"#/\" linkProps={{ className: 'btn-link' }}>\n\t\t\t\t\t\t\t\t\tPolíticas de Privacidade\n\t\t\t\t\t\t\t\t</Breadcrumb.Item>\n\t\t\t\t\t\t\t\t<Breadcrumb.Item className=\"mb-0 text-medium\" href=\"#/\" linkProps={{ className: 'btn-link' }}>\n\t\t\t\t\t\t\t\t\tRegulamento\n\t\t\t\t\t\t\t\t</Breadcrumb.Item>\n\t\t\t\t\t\t\t</Breadcrumb>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</footer>\n\t);\n};\n\nexport default React.memo(Footer);\n","export default __webpack_public_path__ + \"static/media/unknow.fac577d1.webp\";","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport classNames from 'classnames'\nimport { Col, Dropdown, Row } from 'react-bootstrap'\nimport { MENU_PLACEMENT } from 'constants.js'\nimport CsLineIcons from 'cs-line-icons/CsLineIcons'\nimport { layoutShowingNavMenu } from 'layout/layoutSlice'\nimport { Link } from 'react-router-dom'\nimport { DEFAULT_PATHS } from '../../config'\n\nimport UnknowProfile from '../../assets/images/unknow.webp'\n\nconst appRoot = DEFAULT_PATHS.APP.endsWith('/') ? DEFAULT_PATHS.APP.slice(1, DEFAULT_PATHS.APP.length) : DEFAULT_PATHS.APP;\n\nconst NavUserMenuContent = () => (\n\t<div>\n\t\t<Row className=\"mb-3 ms-0 me-0\">\n\t\t\t<Col xs=\"12\" className=\"ps-1 mb-2\">\n\t\t\t\t<div className=\"heading text-primary\">Profile</div>\n\t\t\t</Col>\n\t\t\t<Col xs=\"12\" className=\"ps-1 pe-1\">\n\t\t\t\t<ul className=\"list-unstyled\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"#/!\">Dados do usuário</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"#/!\">Preferências</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</Col>\n\t\t</Row>\n\n\n\t\t<Row className=\"mb-1 ms-0 me-0\">\n\t\t\t<Col xs=\"12\" className=\"p-1 mb-3 pt-3\">\n\t\t\t\t<div className=\"separator-light\" />\n\t\t\t</Col>\n\t\t\t<Col xs=\"12\" className=\"ps-1 pe-1\">\n\t\t\t\t<ul className=\"list-unstyled\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"#/!\">\n\t\t\t\t\t\t\t<CsLineIcons icon=\"help\" className=\"me-2\" size=\"17\" /> <span className=\"align-middle\">Ajuda</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"#/!\">\n\t\t\t\t\t\t\t<CsLineIcons icon=\"file-text\" className=\"me-2\" size=\"17\" /> <span className=\"align-middle\">Documentação</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"#/!\">\n\t\t\t\t\t\t\t<CsLineIcons icon=\"gear\" className=\"me-2\" size=\"17\" /> <span className=\"align-middle\">Configurações</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to={`${appRoot}/profile/logout`}>\n\t\t\t\t\t\t\t<CsLineIcons icon=\"logout\" className=\"me-2\" size=\"17\" /> <span className=\"align-middle\">Sair</span>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</Col>\n\t\t</Row>\n\t</div>\n);\n\nconst NavUserMenuDropdownToggle = React.memo(\n\tReact.forwardRef(({ onClick, expanded = false, user = {} }, ref) => (\n\t\t<a\n\t\t\thref=\"#/!\"\n\t\t\tref={ref}\n\t\t\tclassName=\"d-flex user position-relative\"\n\t\t\tdata-toggle=\"dropdown\"\n\t\t\taria-expanded={expanded}\n\t\t\tonClick={(e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\tonClick(e);\n\t\t\t}}\n\t\t>\n\t\t\t<img className=\"profile\" alt={user.data.name} src={user.data.avatar ? user.data.avatar : UnknowProfile} />\n\t\t\t<div className=\"name\">{user.data.name}</div>\n\t\t</a>\n\t))\n);\n\n// Dropdown needs access to the DOM of the Menu to measure it\nconst NavUserMenuDropdownMenu = React.memo(\n\tReact.forwardRef(({ style, className }, ref) => {\n\t\treturn (\n\t\t\t<div ref={ref} style={style} className={classNames('dropdown-menu dropdown-menu-end user-menu wide', className)}>\n\t\t\t\t<NavUserMenuContent />\n\t\t\t</div>\n\t\t);\n\t})\n);\n\nNavUserMenuDropdownMenu.displayName = 'NavUserMenuDropdownMenu';\n\nconst MENU_NAME = 'NavUserMenu';\n\nconst NavUserMenu = () => {\n\tconst dispatch = useDispatch();\n\tconst {\n\t\tplacementStatus: { view: placement },\n\t\tbehaviourStatus: { behaviourHtmlData },\n\t\tattrMobile,\n\t\tattrMenuAnimate,\n\t} = useSelector((state) => state.menu);\n\n\tconst { isLogin, currentUser } = useSelector((state) => state.auth);\n\tconst { color } = useSelector((state) => state.settings);\n\tconst { showingNavMenu } = useSelector((state) => state.layout);\n\n\tconst onToggle = (status, event) => {\n\t\tif (event && event.stopPropagation) event.stopPropagation();\n\t\telse if (event && event.originalEvent && event.originalEvent.stopPropagation) event.originalEvent.stopPropagation();\n\t\tdispatch(layoutShowingNavMenu(status ? MENU_NAME : ''));\n\t};\n\n\tuseEffect(() => {\n\t\tdispatch(layoutShowingNavMenu(''));\n\t\t// eslint-disable-next-line\n\t}, [attrMenuAnimate, behaviourHtmlData, attrMobile, color]);\n\n\tif (!isLogin) {\n\t\treturn <></>;\n\t}\n\treturn (\n\t\t<Dropdown as=\"div\" bsPrefix=\"user-container d-flex\" onToggle={onToggle} show={showingNavMenu === MENU_NAME} drop=\"down\">\n\t\t\t<Dropdown.Toggle as={NavUserMenuDropdownToggle} user={currentUser} />\n\t\t\t<Dropdown.Menu\n\t\t\t\tas={NavUserMenuDropdownMenu}\n\t\t\t\tclassName=\"dropdown-menu dropdown-menu-end user-menu wide\"\n\t\t\t\tpopperConfig={{\n\t\t\t\t\tmodifiers: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'offset',\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\toffset: () => {\n\t\t\t\t\t\t\t\t\tif (placement === MENU_PLACEMENT.Horizontal) {\n\t\t\t\t\t\t\t\t\t\treturn [0, 7];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (window.innerWidth < 768) {\n\t\t\t\t\t\t\t\t\t\treturn [-84, 7];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn [-78, 7];\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}}\n\t\t\t/>\n\t\t</Dropdown>\n\t);\n};\nexport default React.memo(NavUserMenu);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport { MENU_PLACEMENT } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { layoutShowingNavMenu } from 'layout/layoutSlice';\nimport { fetchNotifications } from './notificationSlice';\n\nconst NotificationsDropdownToggle = React.memo(\n  React.forwardRef(({ onClick, expanded = false }, ref) => (\n    <a\n      ref={ref}\n      href=\"#/\"\n      className=\"notification-button\"\n      data-toggle=\"dropdown\"\n      aria-expanded={expanded}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClick(e);\n      }}\n    >\n      <div className=\"position-relative d-inline-flex\">\n        <CsLineIcons icon=\"bell\" size=\"18\" />\n        <span className=\"position-absolute notification-dot rounded-xl\" />\n      </div>\n    </a>\n  ))\n);\nconst NotificationItem = ({ img = '', link = '', detail = '' }) => (\n  <li className=\"mb-3 pb-3 border-bottom border-separator-light d-flex\">\n    <img src={img} className=\"me-3 sw-4 sh-4 rounded-xl align-self-center\" alt=\"notification\" />\n    <div className=\"align-self-center\">\n      <NavLink to={link} activeClassName=\"\">\n        {detail}\n      </NavLink>\n    </div>\n  </li>\n);\n\nconst NotificationsDropdownMenu = React.memo(\n  React.forwardRef(({ style, className, labeledBy, items }, ref) => {\n    return (\n      <div ref={ref} style={style} className={classNames('wide notification-dropdown scroll-out', className)} aria-labelledby={labeledBy}>\n        <OverlayScrollbarsComponent\n          options={{\n            scrollbars: { autoHide: 'leave', autoHideDelay: 600 },\n            overflowBehavior: { x: 'hidden', y: 'scroll' },\n          }}\n          className=\"scroll\"\n        >\n          <ul className=\"list-unstyled border-last-none\">\n            {items.map((item, itemIndex) => (\n              <NotificationItem key={`notificationItem.${itemIndex}`} detail={item.detail} link={item.link} img={item.img} />\n            ))}\n          </ul>\n        </OverlayScrollbarsComponent>\n      </div>\n    );\n  })\n);\nNotificationsDropdownMenu.displayName = 'NotificationsDropdownMenu';\n\nconst MENU_NAME = 'Notifications';\nconst Notifications = () => {\n  const dispatch = useDispatch();\n\n  const {\n    placementStatus: { view: placement },\n    behaviourStatus: { behaviourHtmlData },\n    attrMobile,\n    attrMenuAnimate,\n  } = useSelector((state) => state.menu);\n  const { color } = useSelector((state) => state.settings);\n  const { items } = useSelector((state) => state.notification);\n  const { showingNavMenu } = useSelector((state) => state.layout);\n\n  useEffect(() => {\n    dispatch(fetchNotifications());\n    return () => {};\n    // eslint-disable-next-line\n  }, []);\n\n  const onToggle = (status, event) => {\n    if (event && event.stopPropagation) event.stopPropagation();\n    else if (event && event.originalEvent && event.originalEvent.stopPropagation) event.originalEvent.stopPropagation();\n    dispatch(layoutShowingNavMenu(status ? MENU_NAME : ''));\n  };\n\n  useEffect(() => {\n    dispatch(layoutShowingNavMenu(''));\n    // eslint-disable-next-line\n  }, [attrMenuAnimate, behaviourHtmlData, attrMobile, color]);\n\n  if (items && items.length > 0) {\n    return (\n      <Dropdown\n        as=\"li\"\n        bsPrefix=\"list-inline-item\"\n        onToggle={onToggle}\n        show={showingNavMenu === MENU_NAME}\n        align={placement === MENU_PLACEMENT.Horizontal ? 'end' : 'start'}\n      >\n        <Dropdown.Toggle as={NotificationsDropdownToggle} />\n        <Dropdown.Menu\n          as={NotificationsDropdownMenu}\n          items={items}\n          popperConfig={{\n            modifiers: [\n              {\n                name: 'offset',\n                options: {\n                  offset: () => {\n                    if (placement === MENU_PLACEMENT.Horizontal) {\n                      return [0, 7];\n                    }\n                    if (window.innerWidth < 768) {\n                      return [-168, 7];\n                    }\n                    return [-162, 7];\n                  },\n                },\n              },\n            ],\n          }}\n        />\n      </Dropdown>\n    );\n  }\n  return <></>;\n};\nexport default React.memo(Notifications);\n","import React, { useMemo, useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport FuzzyHighlighter from 'react-fuzzy-highlighter';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getSearchItems } from 'routing/helper';\nimport { USE_MULTI_LANGUAGE } from 'config.js';\nimport routesAndMenuItems from 'routes.js';\n\nconst RESULT_LIMIT = 10;\n\nconst SearchInput = ({ show, setShow }) => {\n  const history = useHistory();\n  const searchInput = useRef(null);\n  const [data, setData] = useState(null);\n  const [query, setQuery] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const resultCount = React.useRef(0);\n  const selectedItem = React.useRef({});\n  const mySelectedIndexRef = React.useRef(selectedIndex);\n  const setMySelectedIndex = (currenData) => {\n    mySelectedIndexRef.current = currenData;\n    setSelectedIndex(currenData);\n  };\n  const { isLogin, currentUser } = useSelector((state) => state.auth);\n\n  const routes = useMemo(\n    () =>\n      getSearchItems({\n        data: routesAndMenuItems,\n        isLogin,\n        userRole: currentUser.role,\n      })(),\n    [isLogin, currentUser]\n  );\n  const { formatMessage: f } = useIntl();\n\n  const onResultClick = (path) => {\n    if (path) {\n      setShow(false);\n      history.push(path);\n    }\n  };\n\n  const onKeyDown = (e) => {\n    if (![38, 40, 13].includes(e.keyCode)) {\n      return;\n    }\n    const rCount = resultCount.current;\n    const sIndex = mySelectedIndexRef.current;\n    if (rCount <= 0) return;\n\n    if (sIndex === null) {\n      setMySelectedIndex(0);\n      return;\n    }\n\n    if (e.keyCode === 38) {\n      // up\n      setMySelectedIndex(sIndex <= 0 ? rCount - 1 : sIndex - 1);\n    } else if (e.keyCode === 40) {\n      // down\n      setMySelectedIndex(sIndex >= rCount - 1 ? 0 : sIndex + 1);\n    } else {\n      // enter\n      const sCurrent = selectedItem.current;\n      if (sCurrent) {\n        onResultClick(sCurrent.path);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (USE_MULTI_LANGUAGE) {\n      const formatedRoutes = routes.map((d) => ({\n        ...d,\n        label: f({ id: d.label || 'menu.home' }),\n      }));\n      setData(formatedRoutes);\n    } else {\n      setData(routes);\n    }\n    document.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (show) {\n      setTimeout(() => {\n        searchInput.current.focus();\n      }, 0);\n    } else {\n      setQuery('');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [show]);\n\n  useEffect(() => {\n    setMySelectedIndex(null);\n    resultCount.current = 0;\n    selectedItem.current = {};\n    // eslint-disable-next-line\n  }, [query]);\n\n  if (data) {\n    return (\n      <>\n        <input\n          ref={searchInput}\n          id=\"searchPagesInput\"\n          className=\"form-control form-control-xl borderless ps-0 pe-0 mb-1 auto-complete\"\n          type=\"text\"\n          autoComplete=\"off\"\n          onChange={(e) => setQuery(e.target.value)}\n          value={query}\n          placeholder=\"Pesquisar por páginas\"\n          autoFocus\n        />\n        {query.length > 0 && (\n          <FuzzyHighlighter\n            query={query}\n            data={data}\n            options={{\n              shouldSort: true,\n              includeMatches: true,\n              threshold: 0.6,\n              location: 0,\n              distance: 100,\n              maxPatternLength: 32,\n              minMatchCharLength: 1,\n              keys: ['label'],\n            }}\n          >\n            {({ formattedResults, results }) => {\n              resultCount.current = Math.min(formattedResults.length, RESULT_LIMIT);\n              selectedItem.current = selectedIndex === null ? {} : results[selectedIndex].item;\n              return results.length > 0 ? (\n                <ul id=\"searchPagesResults\" className=\"auto-complete-result\">\n                  {formattedResults.slice(0, RESULT_LIMIT).map((formattedResult, resultIndex) => (\n                    <li\n                      key={resultIndex}\n                      onClick={() => onResultClick(formattedResult.item.path)}\n                      className={classNames('auto-complete-result-item', {\n                        autoComplete_selected: selectedIndex === resultIndex,\n                      })}\n                    >\n                      {Array.isArray(formattedResult.formatted.label) ? (\n                        <p className=\"mb-0\">\n                          {formattedResult.formatted.label.map((t, tIndex) => {\n                            if (t.isHighlighted) {\n                              return (\n                                <span key={tIndex} className=\"autoComplete_highlighted\">\n                                  {t.text}\n                                </span>\n                              );\n                            }\n                            return <span key={tIndex}>{t.text}</span>;\n                          })}\n                        </p>\n                      ) : (\n                        <p className=\"mb-0\">{formattedResult.formatted.label}</p>\n                      )}\n                      <p className=\"text-small text-muted mb-0 \">{formattedResult.item.path}</p>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul id=\"searchPagesResults\" className=\"auto-complete-result\">\n                  <li className=\"no_resulst\">No Results</li>\n                </ul>\n              );\n            }}\n          </FuzzyHighlighter>\n        )}\n      </>\n    );\n  }\n  return <></>;\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport SearchInput from './SearchInput';\n\nconst SearchModal = ({ show, setShow }) => {\n  return (\n    <Modal id=\"searchPagesModal\" className=\"modal-under-nav modal-search modal-close-out\" size=\"lg\" show={show} onHide={() => setShow(false)}>\n      <Modal.Header className=\"border-0 p-0\" />\n      <Modal.Body className=\"ps-5 pe-5 pb-0 border-0\">\n        <SearchInput show={show} setShow={setShow} />\n      </Modal.Body>\n      <Modal.Footer className=\"border-top justify-content-start ps-5 pe-5 pb-3 pt-3 border-0\">\n        <span className=\"text-alternate d-inline-block m-0 me-3\">\n          <CsLineIcons icon=\"arrow-bottom\" size=\"15\" className=\"text-alternate align-middle me-1\" />\n          <span className=\"align-middle text-medium\">Navegar</span>\n        </span>\n        <span className=\"text-alternate d-inline-block m-0 me-3\">\n          <CsLineIcons icon=\"arrow-bottom-left\" size=\"15\" className=\"text-alternate align-middle me-1\" />\n          <span className=\"align-middle text-medium\">Selecionar</span>\n        </span>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default SearchModal;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MENU_BEHAVIOUR } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { settingsChangeColor } from 'settings/settingsSlice';\nimport IconMenuNotifications from './notifications/Notifications';\nimport SearchModal from './search/SearchModal';\nimport { menuChangeBehaviour } from './main-menu/menuSlice';\n\nconst NavIconMenu = () => {\n  const { pinButtonEnable, behaviour } = useSelector((state) => state.menu);\n  const { color } = useSelector((state) => state.settings);\n  const dispatch = useDispatch();\n\n  const onPinButtonClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (pinButtonEnable) {\n      dispatch(menuChangeBehaviour(behaviour === MENU_BEHAVIOUR.Pinned ? MENU_BEHAVIOUR.Unpinned : MENU_BEHAVIOUR.Pinned));\n    }\n    return false;\n  };\n  const onDisabledPinButtonClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const onLightDarkModeClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(settingsChangeColor(color.includes('light') ? color.replace('light', 'dark') : color.replace('dark', 'light')));\n  };\n  const [showSearchModal, setShowSearchModal] = useState(false);\n\n  const onSearchIconClick = (e) => {\n    e.preventDefault();\n    setShowSearchModal(true);\n  };\n\n  return (\n    <>\n      <ul className=\"list-unstyled list-inline text-center menu-icons\">\n        <li className=\"list-inline-item\">\n          <a href=\"#/\" onClick={onSearchIconClick}>\n            <CsLineIcons icon=\"search\" size=\"18\" />\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a\n            href=\"#/\"\n            id=\"pinButton\"\n            onClick={pinButtonEnable ? onPinButtonClick : onDisabledPinButtonClick}\n            className={classNames('pin-button', { disabled: !pinButtonEnable })}\n          >\n            <CsLineIcons icon=\"lock-on\" size=\"18\" className=\"unpin\" />\n            <CsLineIcons icon=\"lock-off\" size=\"18\" className=\"pin\" />\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a href=\"#/\" id=\"colorButton\" onClick={onLightDarkModeClick}>\n            <CsLineIcons icon=\"light-on\" size=\"18\" className=\"light\" />\n            <CsLineIcons icon=\"light-off\" size=\"18\" className=\"dark\" />\n          </a>\n        </li>\n        {/* <IconMenuNotifications /> */}\n      </ul>\n      <SearchModal show={showSearchModal} setShow={setShowSearchModal} />\n    </>\n  );\n};\n\nexport default React.memo(NavIconMenu);\n","import React, { useEffect, useState, memo, forwardRef, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport classNames from 'classnames';\nimport { Collapse, Dropdown } from 'react-bootstrap';\nimport { DEFAULT_SETTINGS, USE_MULTI_LANGUAGE } from 'config.js';\nimport { MENU_PLACEMENT } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { layoutShowingNavMenu } from 'layout/layoutSlice';\nimport { menuChangeCollapseAll } from './menuSlice';\n\nconst HorizontalMenuDropdownToggle = memo(\n  forwardRef(({ children, onClick, href = '#', active = false }, ref) => (\n    <a\n      ref={ref}\n      className={classNames('dropdown-toggle', { active })}\n      data-toggle=\"dropdown\"\n      href={href}\n      onClick={(e) => {\n        e.preventDefault();\n        onClick(e);\n      }}\n    >\n      {children}\n    </a>\n  ))\n);\n\nconst MainMenuItem = memo(({ item, id, isSubItem = false, menuPlacement = DEFAULT_SETTINGS.MENU_PLACEMENT }) => {\n  const dispatch = useDispatch();\n  const dropdownMenuRef = useRef();\n  const { collapseAll } = useSelector((state) => state.menu);\n  const { showingNavMenu } = useSelector((state) => state.layout);\n  const { pathname } = useLocation();\n  const isActive = item.path.startsWith('#') ? false : pathname === item.path || pathname.indexOf(`${item.path}/`) > -1;\n\n  const { formatMessage: f } = useIntl();\n  const [verticalMenuCollapseExpanded, setVerticalMenuCollapseExpanded] = useState(isActive);\n  const [horizontalDropdownIsOpen, setHorizontalDropdownIsOpen] = useState(false);\n\n  const getLabel = (icon, label) => (\n    <>\n      {icon && (\n        <>\n          <CsLineIcons icon={icon} size={18} className=\"cs-icon icon\" />{' '}\n        </>\n      )}\n      <span className=\"label\">{USE_MULTI_LANGUAGE ? f({ id: label }) : label}</span>\n    </>\n  );\n\n  const onToggleItem = (isOpen) => {\n    setHorizontalDropdownIsOpen(isOpen);\n  };\n\n  const onVerticalMenuCollapseClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setVerticalMenuCollapseExpanded(!verticalMenuCollapseExpanded);\n    dispatch(menuChangeCollapseAll(false));\n  };\n\n  const onHorizontalMenuDropdownToggleClick = () => {\n    onToggleItem(!horizontalDropdownIsOpen);\n    dispatch(layoutShowingNavMenu(''));\n  };\n\n  useEffect(() => {\n    if (showingNavMenu !== '' && horizontalDropdownIsOpen) {\n      onToggleItem(false);\n    }\n  }, [showingNavMenu, horizontalDropdownIsOpen]);\n\n  if (item.subs && menuPlacement === MENU_PLACEMENT.Horizontal && !item.megaParent) {\n    return (\n      <Dropdown as=\"li\" key={id} onToggle={onToggleItem} className={classNames({ mega: item.mega })} show={horizontalDropdownIsOpen}>\n        <Dropdown.Toggle as={HorizontalMenuDropdownToggle} onClick={onHorizontalMenuDropdownToggleClick} href={item.path} active={isActive}>\n          {getLabel(item.icon, item.label)}\n        </Dropdown.Toggle>\n        <Dropdown.Menu\n          ref={dropdownMenuRef}\n          renderOnMount\n          as=\"ul\"\n          align=\"left\"\n          className={classNames('opacityIn', {\n            'row align-items-start': item.mega,\n            [`row-cols-${item.subs.length}`]: item.mega,\n          })}\n          popperConfig={{\n            strategy: item.mega ? 'fixed' : 'absolute',\n            modifiers: [\n              {\n                name: 'computeStyles',\n                options: {\n                  gpuAcceleration: true, // true by default\n                  adaptive: false,\n                  roundOffsets: ({ x, y }) => {\n                    if (item.mega) {\n                      try {\n                        return {\n                          x: Math.round((window.innerWidth - dropdownMenuRef.current.clientWidth) / 2 - 8),\n                          y: y + 7,\n                        };\n                      } catch (e) {\n                        console.warn('error:', e);\n                      }\n                    }\n                    if (isSubItem) {\n                      return { x, y: y - 34 };\n                    }\n                    return { x, y: y + 2 };\n                  },\n                },\n              },\n            ],\n          }}\n        >\n          <MainMenuItems menuItems={item.subs} menuPlacement={menuPlacement} isSubItem />\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n  if (item.subs && menuPlacement === MENU_PLACEMENT.Horizontal) {\n    return (\n      <li className=\"dropdown col d-flex flex-column\">\n        <NavLink to={item.path} className={classNames('dropdown-toggle', { active: isActive })}>\n          {getLabel(item.icon, item.label)}\n        </NavLink>\n        <ul>\n          <MainMenuItems menuItems={item.subs} menuPlacement={menuPlacement} isSubItem />\n        </ul>\n      </li>\n    );\n  }\n  if (item.subs && menuPlacement === MENU_PLACEMENT.Vertical) {\n    return (\n      <li>\n        <a\n          href={item.path}\n          data-bs-toggle=\"collapse\"\n          role=\"button\"\n          className={classNames({ active: isActive })}\n          aria-expanded={verticalMenuCollapseExpanded && !collapseAll}\n          onClick={onVerticalMenuCollapseClick}\n        >\n          {getLabel(item.icon, item.label)}\n        </a>\n        <Collapse in={verticalMenuCollapseExpanded && !collapseAll}>\n          <ul>\n            <MainMenuItems menuItems={item.subs} menuPlacement={menuPlacement} isSubItem />\n          </ul>\n        </Collapse>\n      </li>\n    );\n  }\n  if (item.isExternal) {\n    return (\n      <li key={id}>\n        <a href={item.path} target=\"_blank\" rel=\"noopener noreferrer\">\n          {getLabel(item.icon, item.label)}\n        </a>\n      </li>\n    );\n  }\n  if (!isSubItem || menuPlacement === MENU_PLACEMENT.Vertical) {\n    return (\n      <li>\n        <NavLink to={item.path} className={classNames({ active: isActive })} activeClassName=\"\">\n          {getLabel(item.icon, item.label)}\n        </NavLink>\n      </li>\n    );\n  }\n  if (menuPlacement === MENU_PLACEMENT.Horizontal && item.megaParent) {\n    return (\n      <li className=\"col d-flex flex-column\">\n        <NavLink to={item.path} className={classNames({ active: isActive })} activeClassName=\"\">\n          {getLabel(item.icon, item.label)}\n        </NavLink>\n      </li>\n    );\n  }\n  return (\n    <Dropdown.Item as=\"li\">\n      <NavLink to={item.path} className={classNames({ active: isActive })} activeClassName=\"\">\n        {getLabel(item.icon, item.label)}\n      </NavLink>\n    </Dropdown.Item>\n  );\n});\n\nMainMenuItem.displayName = 'MainMenuItem';\n\nconst MainMenuItems = React.memo(({ menuItems = [], menuPlacement = DEFAULT_SETTINGS.MENU_PLACEMENT, isSubItem = false }) =>\n  menuItems.map((item, index) => (\n    <MainMenuItem key={`menu.${item.path}.${index}`} id={item.path} item={item} menuPlacement={menuPlacement} isSubItem={isSubItem} />\n  ))\n);\n\nMainMenuItems.displayName = 'MainMenuItems';\n\nexport default React.memo(MainMenuItems);\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { MENU_PLACEMENT, MENU_BEHAVIOUR } from 'constants.js';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport { getMenuItems } from 'routing/helper';\nimport { useWindowSize } from 'hooks/useWindowSize';\nimport { useWindowScroll } from 'hooks/useWindowScroll';\nimport routesAndMenuItems from 'routes.js';\nimport { layoutShowingNavMenu } from 'layout/layoutSlice';\nimport MainMenuItems from './MainMenuItems';\nimport {\n  menuChangeAttrMenuAnimate,\n  menuChangeAttrMobile,\n  menuChangeBehaviourStatus,\n  menuChangeCollapseAll,\n  menuChangeNavClasses,\n  menuChangePinButtonEnable,\n  menuChangePlacementStatus,\n} from './menuSlice';\nimport { checkBehaviour, checkPlacement, isDeeplyDiffBehaviourStatus, isDeeplyDiffPlacementStatus } from './helper';\n\nconst MainMenu = () => {\n  const dispatch = useDispatch();\n  const { placement, behaviour, placementStatus, behaviourStatus, attrMobile, breakpoints, useSidebar } = useSelector((state) => state.menu);\n  const { isLogin, currentUser } = useSelector((state) => state.auth);\n  const scrolled = useWindowScroll();\n  const { width } = useWindowSize();\n\n  const menuItemsMemo = useMemo(\n    () =>\n      getMenuItems({\n        data: attrMobile && useSidebar ? routesAndMenuItems : routesAndMenuItems.mainMenuItems,\n        isLogin,\n        userRole: currentUser.role,\n      }),\n    [isLogin, currentUser, attrMobile, useSidebar]\n  );\n\n  useEffect(() => {\n    dispatch(menuChangeAttrMenuAnimate(''));\n    dispatch(layoutShowingNavMenu(''));\n\n    if (placementStatus.status === 2 || placementStatus.status === 4) {\n      // Switching back from the mobile menu layout fast\n      dispatch(menuChangeNavClasses({}));\n      dispatch(menuChangeAttrMobile(false));\n    }\n    // Prevents menu animation to make a fast switch\n    if (behaviourStatus.status === 1) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangePinButtonEnable(true));\n    } else if (behaviourStatus.status === 2) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangePinButtonEnable(false));\n    } else if (behaviourStatus.status === 3) {\n      dispatch(menuChangePinButtonEnable(true));\n      dispatch(menuChangeCollapseAll(false));\n    } else if (behaviourStatus.status === 4) {\n      dispatch(menuChangePinButtonEnable(false));\n      dispatch(menuChangeCollapseAll(true));\n    } else if (behaviourStatus.status === 5) {\n      dispatch(menuChangeCollapseAll(false));\n      dispatch(menuChangePinButtonEnable(true));\n    } else if (behaviourStatus.status === 6) {\n      dispatch(menuChangeCollapseAll(false));\n      dispatch(menuChangePinButtonEnable(true));\n    }\n    // eslint-disable-next-line\n  }, [behaviourStatus, placementStatus]);\n\n  useEffect(() => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Vertical && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned && attrMobile !== true) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangeAttrMenuAnimate('hidden'));\n    }\n    return () => {};\n    // eslint-disable-next-line\n  }, [attrMobile]);\n\n  useEffect(() => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Horizontal && !attrMobile && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned) {\n      if (scrolled) {\n        dispatch(menuChangeAttrMenuAnimate('hidden'));\n        // Hiding all dropdowns to make sure they are closed when menu collapses\n        document.documentElement.click();\n      } else {\n        dispatch(menuChangeAttrMenuAnimate(''));\n      }\n    }\n    return () => {};\n    // eslint-disable-next-line\n  }, [scrolled]);\n\n  const getMenuStatus = useCallback(\n    (pBreakpoints, pPlacement, pBehaviour) => {\n      if (pBreakpoints) {\n        const placementStatusCB = checkPlacement({ placement: pPlacement, breakpoints: pBreakpoints });\n        const behaviourStatusCB = checkBehaviour({ placement: placementStatusCB.placementHtmlData, behaviour: pBehaviour, breakpoints: pBreakpoints });\n\n        if (isDeeplyDiffPlacementStatus(placementStatusCB, placementStatus)) {\n          dispatch(menuChangePlacementStatus(placementStatusCB));\n        }\n        if (isDeeplyDiffBehaviourStatus(behaviourStatusCB, behaviourStatus)) {\n          dispatch(menuChangeBehaviourStatus(behaviourStatusCB));\n        }\n      }\n      // eslint-disable-next-line\n  }, [behaviourStatus,placementStatus,breakpoints]);\n\n  useEffect(() => {\n    if (width && placement && behaviour && breakpoints) {\n      getMenuStatus(breakpoints, placement, behaviour);\n    }\n    // eslint-disable-next-line\n  }, [width, breakpoints, placement, behaviour]);\n\n  // Initializes the horizontal menu\n  // Customizes dropdown clicks to prevent auto closing and making sure all sub menus are closed when parent is closed\n  if (menuItemsMemo) {\n    if (placementStatus.view === MENU_PLACEMENT.Horizontal) {\n      return (\n        <div className=\"menu-container flex-grow-1\">\n          <ul id=\"menu\" className={classNames('menu show')}>\n            <MainMenuItems menuItems={menuItemsMemo} menuPlacement={placementStatus.view} />\n          </ul>\n        </div>\n      );\n    }\n    // Vertical menu scrollbar init\n    return (\n      <OverlayScrollbarsComponent\n        options={{\n          scrollbars: { autoHide: 'leave', autoHideDelay: 600 },\n          overflowBehavior: { x: 'hidden', y: 'scroll' },\n        }}\n        className=\"menu-container flex-grow-1\"\n      >\n        <ul id=\"menu\" className={classNames('menu show')}>\n          <MainMenuItems menuItems={menuItemsMemo} menuPlacement={placementStatus.view} />\n        </ul>\n      </OverlayScrollbarsComponent>\n    );\n  }\n  return <></>;\n};\n\nexport default React.memo(MainMenu);\n","import { useState, useEffect } from 'react';\n\nexport const useWindowScroll = () => {\n  const [scrolled, setScrolled] = useState(false);\n  const offset = 80;\n  let windowScrolled = false;\n  let prevScrollPos = window.pageYOffset;\n\n  const handleLoad = () => {\n    prevScrollPos = window.pageYOffset;\n  };\n  const handleScroll = () => {\n    windowScrolled = true;\n  };\n  // Horizontal menu hiding and showing based on menu behaviour and scroll position\n  const onWindowScrollInterval = () => {\n    if (windowScrolled) {\n      const currentScrollPos = window.pageYOffset;\n      windowScrolled = false;\n\n      if (Math.abs(prevScrollPos - currentScrollPos) <= offset && currentScrollPos > offset) {\n        prevScrollPos = currentScrollPos;\n        return;\n      }\n\n      if (prevScrollPos > currentScrollPos || currentScrollPos <= offset) {\n        setScrolled(false);\n      } else if (prevScrollPos <= currentScrollPos && currentScrollPos > offset) {\n        setScrolled(true);\n      }\n      prevScrollPos = currentScrollPos;\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(onWindowScrollInterval, 200);\n\n    window.addEventListener('load', handleLoad);\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      clearInterval(intervalId);\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('load', handleLoad);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return scrolled;\n};\n","import { useState, useEffect } from 'react';\n\nexport const useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    let resizeTimer = -1;\n    function handleResize() {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => {\n        setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n      }, 50);\n    }\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      clearTimeout(resizeTimer);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return windowSize;\n};\n","import { DIMENSION, MENU_BEHAVIOUR, MENU_PLACEMENT } from 'constants.js';\n// Decides which type of menu to add based on the parameters or the current window size.\n// placementStatus:\n// 1 {selected: 'horizontal',  dimension: 'mobile',         html-data: 'horizontal', view: 'vertical'}\n// 2 {selected: 'horizontal',  dimension: 'tablet|desktop', html-data: 'horizontal', view: 'horizontal'}\n// 3 {selected: 'vertical',    dimension: 'mobile',         html-data: 'horizontal', view: 'vertical' }\n// 4 {selected: 'vertical',    dimension: 'tablet|desktop', html-data: 'vertical',   view: 'vertical' }\n\nexport const checkPlacement = ({ placement, breakpoints }) => {\n  const windowWidth = window.innerWidth;\n  if (placement === MENU_PLACEMENT.Horizontal) {\n    // Adding vertical menu for mobile\n    if (breakpoints.horizontalMobile > windowWidth) {\n      return {\n        status: 1,\n        placementHtmlData: MENU_PLACEMENT.Horizontal,\n        dimensionHtmlData: DIMENSION.Mobile,\n        view: MENU_PLACEMENT.Vertical,\n      };\n    }\n    // Adding horizontal menu for desktop\n    return {\n      status: 2,\n      placementHtmlData: MENU_PLACEMENT.Horizontal,\n      dimensionHtmlData: DIMENSION.Desktop,\n      view: MENU_PLACEMENT.Horizontal,\n    };\n  }\n\n  if (placement === MENU_PLACEMENT.Vertical) {\n    // Adding vertical menu for mobile\n    if (breakpoints.verticalMobile > windowWidth) {\n      return {\n        status: 3,\n        placementHtmlData: MENU_PLACEMENT.Horizontal,\n        dimensionHtmlData: DIMENSION.Mobile,\n        view: MENU_PLACEMENT.Vertical,\n      };\n    }\n    // Adding vertical menu for desktop\n    return {\n      status: 4,\n      placementHtmlData: MENU_PLACEMENT.Vertical,\n      dimensionHtmlData: DIMENSION.Desktop,\n      view: MENU_PLACEMENT.Vertical,\n    };\n  }\n  return { status: 0, placementHtmlData: '', dimensionHtmlData: '', view: '' };\n};\n\n// Decides which type of menu behaviour to init based on the parameters or the current window size.\n//  behaviourStatus:\n//  1 {selected: 'unpinned', placement: 'vertical',   dimension: 'mobile|desktop',  html-data: 'unpinned'}\n//  2 {selected: 'unpinned', placement: 'vertical',   dimension: 'tablet',          html-data: 'unpinned'}\n//  3 {selected: 'pinned',   placement: 'vertical',   dimension: 'mobile|desktop',  html-data: 'pinned'}\n//  4 {selected: 'pinned',   placement: 'vertical',   dimension: 'tablet',          html-data: 'unpinned'}\n//  5 {selected: 'unpinned', placement: 'horizontal', dimension: 'all',             html-data: 'unpinned'}\n//  6 {selected: 'pinned',   placement: 'horizontal', dimension: 'all',             html-data: 'pinned'}\nexport const checkBehaviour = ({ placement, behaviour, breakpoints }) => {\n  const windowWidth = window.innerWidth;\n  // Vertical rules\n  if (placement === MENU_PLACEMENT.Vertical && behaviour === MENU_BEHAVIOUR.Unpinned) {\n    // Mobile and Desktop\n    if (breakpoints.verticalMobile > windowWidth || breakpoints.verticalUnpinned <= windowWidth) {\n      return {\n        status: 1,\n        // A small fix to make sure nav config at Vertical No Semi Hidden overrides theme settings.\n        behaviourHtmlData: breakpoints.verticalUnpinned !== breakpoints.verticalMobile ? MENU_BEHAVIOUR.Unpinned : MENU_BEHAVIOUR.Pinned,\n      };\n    }\n    // Tablet\n    return {\n      status: 2,\n      behaviourHtmlData: MENU_BEHAVIOUR.Unpinned,\n    };\n  }\n  if (placement === MENU_PLACEMENT.Vertical && behaviour === MENU_BEHAVIOUR.Pinned) {\n    // Mobile and Desktop\n    if (breakpoints.verticalMobile > windowWidth || breakpoints.verticalUnpinned <= windowWidth) {\n      return {\n        status: 3,\n        behaviourHtmlData: MENU_BEHAVIOUR.Pinned,\n      };\n    }\n    // Tablet\n    return {\n      status: 4,\n      behaviourHtmlData: MENU_BEHAVIOUR.Unpinned,\n    };\n  }\n\n  // Horizontal rules\n  if (placement === MENU_PLACEMENT.Horizontal && behaviour === MENU_BEHAVIOUR.Unpinned) {\n    return {\n      status: 5,\n      behaviourHtmlData: MENU_BEHAVIOUR.Unpinned,\n    };\n  }\n  if (placement === MENU_PLACEMENT.Horizontal && behaviour === MENU_BEHAVIOUR.Pinned) {\n    return {\n      status: 6,\n      behaviourHtmlData: MENU_BEHAVIOUR.Pinned,\n    };\n  }\n  return { status: 0, behaviourHtmlData: '' };\n};\n\n// Using popperjs to align user,language and notification dropdowns in the menu\nexport const dropdownPositionFixInMenu = ({ style, placement, isMobile }) => {\n  let xPlacement = 'bottom-end';\n  let { transform } = style;\n  if ((placement === MENU_PLACEMENT.Vertical || isMobile) && style && style.transform) {\n    transform = style.transform.replace(/(\\d+)px/, '15px');\n    if (window.innerHeight <= 450) {\n      // transform = transform.replace(/, (\\d+)px/, ', 15px');\n      xPlacement = 'top-end';\n    }\n  }\n  return { xPlacement, transform };\n};\n\nexport const isDeeplyDiffPlacementStatus = (a, b) => {\n  if (a.status !== b.status) return true;\n  if (a.placementHtmlData !== b.placementHtmlData) return true;\n  if (a.dimensionHtmlData !== b.dimensionHtmlData) return true;\n  // noinspection RedundantIfStatementJS\n  if (a.view !== b.view) return true;\n  return false;\n};\nexport const isDeeplyDiffBehaviourStatus = (a, b) => {\n  if (a.status !== b.status) return true;\n  // noinspection RedundantIfStatementJS\n  if (a.behaviourHtmlData !== b.behaviourHtmlData) return true;\n  return false;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { DEFAULT_PATHS } from 'config.js';\n\nconst NavLogo = () => {\n  return (\n    <div className=\"logo position-relative\">\n      <Link to={DEFAULT_PATHS.APP}>\n        {/*\n          Logo can be added directly\n          <img src=\"/img/logo/logo-white.svg\" alt=\"logo\" />\n          Or added via css to provide different ones for different color themes\n         */}\n        <div className=\"img\" />\n      </Link>\n    </div>\n  );\n};\nexport default React.memo(NavLogo);\n","import React from 'react';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\n\nconst ScrollspyContent = React.memo(({ items }) => (\n  <ul className=\"nav flex-column\">\n    {items.map((item, index) => (\n      <li key={index}>\n        <a className=\"nav-link\" href={`#${item.id}`}>\n          <CsLineIcons icon=\"chevron-right\" />\n          <span className=\"align-middle\">{item.text}</span>\n        </a>\n        {item.subs && (\n          <ul className=\"nav flex-column\">\n            {item.subs.map((sub, subIndex) => (\n              <li key={subIndex}>\n                <a className=\"nav-link\" href={`#${sub.id}`}>\n                  {sub.text}\n                </a>\n              </li>\n            ))}\n          </ul>\n        )}\n      </li>\n    ))}\n  </ul>\n));\nScrollspyContent.displayName = 'ScrollspyContent';\n\nexport default ScrollspyContent;\n","import React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport ScrollspyContent from './ScrollspyContent';\n\nconst ScrollspyToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <a\n    href=\"#/!\"\n    ref={ref}\n    className=\"spy-button text-white\"\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </a>\n));\nScrollspyToggle.displayName = 'ScrollspyToggle';\n\nconst ScrollspyMobile = ({ items = [] }) => {\n  if (items === null || items.length <= 0) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Dropdown>\n        <Dropdown.Toggle as={ScrollspyToggle}>\n          <CsLineIcons icon=\"menu-dropdown\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu\n          as=\"ul\"\n          className=\"dropdown-menu-end\"\n          popperConfig={{\n            modifiers: [\n              {\n                name: 'offset',\n                options: {\n                  offset: [0, 5],\n                },\n              },\n            ],\n          }}\n        >\n          <ScrollspyContent items={items} />\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n};\nexport default React.memo(ScrollspyMobile);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport ScrollspyMobile from 'components/scrollspy/ScrollspyMobile';\nimport { menuChangeAttrMobile, menuChangeNavClasses } from './main-menu/menuSlice';\n\nconst NavMobileButtons = () => {\n  const dispatch = useDispatch();\n  const { navClasses } = useSelector((state) => state.menu);\n  const { items: scrollspyItems } = useSelector((state) => state.scrollspy);\n\n  // Starts mobile menu opening sequence\n  const showMobileMenu = (e) => {\n    e.preventDefault();\n    dispatch(menuChangeAttrMobile(true));\n    let newNavClasses = {\n      ...navClasses,\n      'mobile-top-out': true,\n      'mobile-top-in': false,\n      'mobile-top-ready': false,\n    };\n    dispatch(menuChangeNavClasses(newNavClasses));\n    setTimeout(() => {\n      newNavClasses = {\n        ...newNavClasses,\n        'mobile-top-out': false,\n        'mobile-side-ready': true,\n      };\n      dispatch(menuChangeNavClasses(newNavClasses));\n    }, 200);\n    setTimeout(() => {\n      newNavClasses = {\n        ...newNavClasses,\n        'mobile-side-in': true,\n      };\n      dispatch(menuChangeNavClasses(newNavClasses));\n    }, 230);\n  };\n\n  // Starts mobile menu closing sequence\n  const hideMobileMenu = () => {\n    let newNavClasses = {\n      ...navClasses,\n      'mobile-side-out': true,\n      'mobile-side-ready': true,\n      'mobile-side-in': false,\n    };\n    dispatch(menuChangeNavClasses(newNavClasses));\n    setTimeout(() => {\n      newNavClasses = {\n        ...newNavClasses,\n        'mobile-side-ready': false,\n        'mobile-side-out': false,\n        'mobile-top-ready': true,\n      };\n      dispatch(menuChangeNavClasses(newNavClasses));\n    }, 200);\n    setTimeout(() => {\n      newNavClasses = {\n        ...newNavClasses,\n        'mobile-top-in': true,\n        'mobile-top-ready': true,\n      };\n      dispatch(menuChangeNavClasses(newNavClasses));\n      dispatch(menuChangeAttrMobile(false));\n    }, 230);\n  };\n\n  useEffect(() => {\n    if (navClasses && navClasses['mobile-side-in']) {\n      window.addEventListener('click', hideMobileMenu);\n    }\n    return () => {\n      window.removeEventListener('click', hideMobileMenu);\n    };\n    // eslint-disable-next-line\n  }, [navClasses]);\n\n  return (\n    <div className=\"mobile-buttons-container\">\n      {scrollspyItems && scrollspyItems.length > 0 && <ScrollspyMobile items={scrollspyItems} />}\n      <a href=\"#/\" id=\"mobileMenuButton\" className=\"menu-button\" onClick={showMobileMenu}>\n        <CsLineIcons icon=\"menu\" />\n      </a>\n    </div>\n  );\n};\nexport default React.memo(NavMobileButtons);\n","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { MENU_BEHAVIOUR, MENU_PLACEMENT } from 'constants.js';\nimport NavUserMenu from './NavUserMenu';\nimport NavIconMenu from './NavIconMenu';\nimport MainMenu from './main-menu/MainMenu';\nimport NavLogo from './NavLogo';\nimport NavMobileButtons from './NavMobileButtons';\nimport { menuChangeAttrMenuAnimate, menuChangeCollapseAll } from './main-menu/menuSlice';\nimport NavLanguageSwitcher from './NavLanguageSwitcher';\n\nconst DELAY = 80;\n\nconst Nav = () => {\n  const dispatch = useDispatch();\n  const { navClasses, placementStatus, behaviourStatus, attrMobile, menuPadding } = useSelector((state) => state.menu);\n  const mouseActionTimer = useRef(null);\n\n  // Vertical menu semihidden state showing\n  // Only works when the vertical menu is active and mobile menu closed\n  const onMouseEnterDelay = () => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Vertical && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned && attrMobile !== true) {\n      dispatch(menuChangeCollapseAll(false));\n      dispatch(menuChangeAttrMenuAnimate('show'));\n    }\n  };\n\n  // Delayed one that hides or shows the menu. It's required to prevent collapse animation getting stucked\n  const onMouseEnter = () => {\n    if (mouseActionTimer.current) clearTimeout(mouseActionTimer.current);\n\n    mouseActionTimer.current = setTimeout(() => {\n      onMouseEnterDelay();\n    }, DELAY);\n  };\n\n  // Vertical menu semihidden state hiding\n  // Only works when the vertical menu is active and mobile menu closed\n  const onMouseLeaveDelay = () => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Vertical && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned && attrMobile !== true) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangeAttrMenuAnimate('hidden'));\n    }\n  };\n\n  const onMouseLeave = () => {\n    if (mouseActionTimer.current) clearTimeout(mouseActionTimer.current);\n    mouseActionTimer.current = setTimeout(() => {\n      onMouseLeaveDelay();\n    }, DELAY);\n  };\n\n  return (\n    <div id=\"nav\" className={classNames('nav-container d-flex', navClasses)} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n      <div\n        className=\"nav-content d-flex\"\n        style={placementStatus.placementHtmlData === MENU_PLACEMENT.Horizontal && menuPadding ? { paddingRight: menuPadding } : {}}\n      >\n        <NavLogo />\n        {/* <NavLanguageSwitcher /> */}\n        <NavUserMenu />\n        <NavIconMenu />\n        <MainMenu />\n        <NavMobileButtons />\n      </div>\n      <div className=\"nav-shadow\" />\n    </div>\n  );\n};\nexport default React.memo(Nav);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { USE_MULTI_LANGUAGE } from 'config.js';\n\nconst SidebarMenuItems = React.memo(({ menuItems = [] }) =>\n  menuItems.map((item, index) => <SidebarMenuItem key={`menu.${item.path}.${index}`} id={item.path} item={item} />)\n);\nSidebarMenuItems.displayName = 'SidebarMenuItems';\n\nconst SidebarMenuItem = ({ item, id }) => {\n  const { pathname } = useLocation();\n  const { formatMessage: f } = useIntl();\n\n  const isActive = item.path.startsWith('#') ? false : pathname === item.path || pathname.indexOf(`${item.path}/`) > -1;\n\n  const getLabel = (icon, label) => (\n    <>\n      {icon && (\n        <>\n          <CsLineIcons icon={icon} className=\"cs-icon icon\" />{' '}\n        </>\n      )}\n      <span className=\"label\">{USE_MULTI_LANGUAGE ? f({ id: label }) : label}</span>\n    </>\n  );\n\n  if (item.subs) {\n    return (\n      <li>\n        <NavLink to={item.path} className={classNames({ active: isActive })} data-bs-target={item.path}>\n          {getLabel(item.icon, item.label)}\n        </NavLink>\n        <ul>\n          <SidebarMenuItems menuItems={item.subs} />\n        </ul>\n      </li>\n    );\n  }\n  if (item.isExternal) {\n    return (\n      <li key={id}>\n        <a href={item.path} target=\"_blank\" rel=\"noopener noreferrer\">\n          {getLabel(item.icon, item.label)}\n        </a>\n      </li>\n    );\n  }\n  return (\n    <li>\n      <NavLink to={item.path} className={classNames({ active: isActive })} activeClassName=\"\">\n        {getLabel(item.icon, item.label)}\n      </NavLink>\n    </li>\n  );\n};\n\nexport default SidebarMenuItems;\n","import React, { useMemo } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { getMenuItems } from 'routing/helper';\nimport routesAndMenuItems from 'routes.js';\nimport SidebarMenuItems from './SidebarMenuItems';\n\nconst SidebarMenu = () => {\n  const { isLogin, currentUser } = useSelector((state) => state.auth);\n  const { useSidebar } = useSelector((state) => state.menu);\n\n  const menuItemsMemo = useMemo(\n    () =>\n      getMenuItems({\n        data: routesAndMenuItems.sidebarItems,\n        isLogin,\n        userRole: currentUser.role,\n      }),\n    [isLogin, currentUser]\n  );\n\n  if (!useSidebar === true) {\n    return <></>;\n  }\n  return (\n    <Col xs=\"auto\" className=\"side-menu-container\">\n      <ul className=\"sw-25 side-menu mb-0 primary\" id=\"menuSide\">\n        <SidebarMenuItems menuItems={menuItemsMemo} />\n      </ul>\n    </Col>\n  );\n};\nexport default SidebarMenu;\n","import React, { useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useLocation } from 'react-router-dom';\nimport useLayout from 'hooks/useLayout';\nimport Footer from 'layout/footer/Footer';\nimport Nav from 'layout/nav/Nav';\nimport RightButtons from 'layout/right-buttons/RightButtons';\nimport SidebarMenu from 'layout/nav/sidebar-menu/SidebarMenu';\n\nconst Layout = ({ children }) => {\n\tuseLayout();\n\n\tconst { pathname } = useLocation();\n\n\tuseEffect(() => {\n\t\tdocument.documentElement.click();\n\t\twindow.scrollTo(0, 0);\n\t}, [pathname]);\n\n\treturn (\n\t\t<>\n\t\t\t<Nav />\n\t\t\t<main>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row className=\"h-100\">\n\t\t\t\t\t\t<SidebarMenu />\n\t\t\t\t\t\t<Col className=\"h-100\" id=\"contentArea\">\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t\t{/* <RightButtons /> */}\n\t\t</>\n\t);\n};\n\nexport default React.memo(Layout);\n","import React, { useMemo } from 'react';\n\n// import redux for auth guard\nimport { useSelector } from 'react-redux';\n\n// import layout\nimport Layout from 'layout/Layout';\n\n// import routing modules\nimport RouteIdentifier from 'routing/components/RouteIdentifier';\nimport { getRoutes } from 'routing/helper';\nimport routesAndMenuItems from 'routes.js';\nimport Loading from 'components/loading/Loading';\n\n\n// STYLES\nimport 'react-datepicker/dist/react-datepicker.css'\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\n\nconst App = () => {\n\tconst { currentUser, isLogin } = useSelector((state) => state.auth);\n\tconst routes = useMemo(() => getRoutes({ data: routesAndMenuItems, isLogin, userRole: currentUser.role }), [isLogin, currentUser]);\n\n\tif (routes) {\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<RouteIdentifier routes={routes} fallback={<Loading />} />\n\t\t\t</Layout>\n\t\t);\n\t}\n\treturn <></>;\n};\n\nexport default App;\n"],"sourceRoot":""}